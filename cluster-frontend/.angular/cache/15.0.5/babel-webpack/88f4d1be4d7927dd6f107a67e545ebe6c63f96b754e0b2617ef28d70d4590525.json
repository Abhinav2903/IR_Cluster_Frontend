{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport * as Highcharts from 'highcharts/highcharts';\nimport HighchartsMore from 'highcharts/highcharts-more';\nHighchartsMore(Highcharts);\nlet SearchPageComponent = class SearchPageComponent {\n  constructor(clu) {\n    this.clu = clu;\n    this.query = '';\n    this.Highcharts = Highcharts;\n  }\n  ngOnInit() {\n    this.page_render();\n  }\n  page_render() {\n    console.log('page render');\n    const el = document.getElementById('input_query');\n    el === null || el === void 0 ? void 0 : el.addEventListener('keypress', event => {\n      console.log('EL' + el.value);\n      if (event.code === 'Enter') {\n        this.cluster_search(JSON.stringify(el.value));\n      }\n    });\n  }\n  cluster_search(query) {\n    console.log('cluster search call query' + query);\n    this.fetch_cluster_data();\n    this.highchart_function(query);\n  }\n  fetch_cluster_data() {\n    //service call cluster service and fetch json object \n  }\n  highchart_function(query) {\n    this.bubblechart = {\n      plotOptions: {\n        series: {\n          cursor: 'pointer',\n          events: {\n            click: event => {\n              this.clickchart(event, query);\n            }\n          }\n        }\n      },\n      series: [{\n        name: 'Europe',\n        data: [{\n          name: 'Germany',\n          value: 245\n        }]\n      }],\n      chart: {\n        type: 'packedbubble'\n      },\n      title: {\n        text: 'Query Search'\n      }\n    };\n  }\n  clickchart(event, query) {\n    alert(' clicked\\n' + event);\n    location.href = 'https://en.wikipedia.org/wiki/' + query;\n    console.log('Chart Event' + event);\n  }\n};\nSearchPageComponent = __decorate([Component({\n  selector: 'app-search-page',\n  templateUrl: './search-page.component.html',\n  styleUrls: ['./search-page.component.scss']\n})], SearchPageComponent);\nexport { SearchPageComponent };","map":{"version":3,"mappings":";AACA,SAASA,SAAS,QAAgB,eAAe;AACjD,OAAO,KAAKC,UAAU,MAAM,uBAAuB;AACnD,OAAOC,cAAc,MAAM,4BAA4B;AAEvDA,cAAc,CAACD,UAAU,CAAC;AAMnB,IAAME,mBAAmB,GAAzB,MAAMA,mBAAmB;EAG9BC,YAAoBC,GAAG;IAAH,QAAG,GAAHA,GAAG;IAFvB,UAAK,GAAW,EAAE;IAGlB,eAAU,GAAGJ,UAAU;EADG;EAG1BK,QAAQ;IACN,IAAI,CAACC,WAAW,EAAE;EACpB;EAEOA,WAAW;IAChBC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC1B,MAAMC,EAAE,GAAGC,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAqB;IAErEF,EAAE,aAAFA,EAAE,uBAAFA,EAAE,CAAEG,gBAAgB,CAAC,UAAU,EAAGC,KAAK,IAAI;MACzCN,OAAO,CAACC,GAAG,CAAC,IAAI,GAAGC,EAAE,CAACK,KAAK,CAAC;MAC5B,IAAID,KAAK,CAACE,IAAI,KAAK,OAAO,EAAE;QAC1B,IAAI,CAACC,cAAc,CAACC,IAAI,CAACC,SAAS,CAACT,EAAE,CAACK,KAAK,CAAC,CAAC;;IAEjD,CAAC,CAAC;EACJ;EAEOE,cAAc,CAACG,KAAU;IAC9BZ,OAAO,CAACC,GAAG,CAAC,2BAA2B,GAAGW,KAAK,CAAC;IAChD,IAAI,CAACC,kBAAkB,EAAE;IACzB,IAAI,CAACC,kBAAkB,CAACF,KAAK,CAAC;EAChC;EAEOC,kBAAkB;IAEvB;EAAA;EAKKC,kBAAkB,CAACF,KAAU;IAClC,IAAI,CAACG,WAAW,GAAG;MACjBC,WAAW,EAAE;QACXC,MAAM,EAAE;UACNC,MAAM,EAAE,SAAS;UACjBC,MAAM,EAAE;YACNC,KAAK,EAAGd,KAAU,IAAI;cACpB,IAAI,CAACe,UAAU,CAACf,KAAK,EAAEM,KAAK,CAAC;YAC/B;;;OAGL;MAEDK,MAAM,EAAE,CACN;QACEK,IAAI,EAAE,QAAQ;QACdC,IAAI,EAAE,CAAC;UAAED,IAAI,EAAE,SAAS;UAAEf,KAAK,EAAE;QAAG,CAAE;OACvC,CACF;MACDiB,KAAK,EAAE;QACLC,IAAI,EAAE;OACP;MACDC,KAAK,EAAE;QACLC,IAAI,EAAE;;KAET;EACH;EAEON,UAAU,CAACf,KAAU,EAAEM,KAAU;IACtCgB,KAAK,CAAC,YAAY,GAAGtB,KAAK,CAAC;IAC3BuB,QAAQ,CAACC,IAAI,GAAG,gCAAgC,GAAGlB,KAAK;IACxDZ,OAAO,CAACC,GAAG,CAAC,aAAa,GAAGK,KAAK,CAAC;EACpC;CACD;AApEYX,mBAAmB,eAL/BH,SAAS,CAAC;EACTuC,QAAQ,EAAE,iBAAiB;EAC3BC,WAAW,EAAE,8BAA8B;EAC3CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,GACWtC,mBAAmB,CAoE/B;SApEYA,mBAAmB","names":["Component","Highcharts","HighchartsMore","SearchPageComponent","constructor","clu","ngOnInit","page_render","console","log","el","document","getElementById","addEventListener","event","value","code","cluster_search","JSON","stringify","query","fetch_cluster_data","highchart_function","bubblechart","plotOptions","series","cursor","events","click","clickchart","name","data","chart","type","title","text","alert","location","href","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\IR_Cluster_Frontend\\IR_Cluster_Frontend\\cluster-frontend\\src\\app\\component\\search-page\\search-page.component.ts"],"sourcesContent":["import { stringToFileBuffer } from '@angular-devkit/core/src/virtual-fs/host';\nimport { Component, OnInit } from '@angular/core';\nimport * as Highcharts from 'highcharts/highcharts';\nimport HighchartsMore from 'highcharts/highcharts-more';\n\nHighchartsMore(Highcharts);\n@Component({\n  selector: 'app-search-page',\n  templateUrl: './search-page.component.html',\n  styleUrls: ['./search-page.component.scss'],\n})\nexport class SearchPageComponent implements OnInit {\n  query: string = '';\n  bubblechart: any;\n  constructor(private clu) {}\n  Highcharts = Highcharts;\n\n  ngOnInit(): void {\n    this.page_render();\n  }\n\n  public page_render() {\n    console.log('page render');\n    const el = document.getElementById('input_query') as HTMLInputElement;\n\n    el?.addEventListener('keypress', (event) => {\n      console.log('EL' + el.value);\n      if (event.code === 'Enter') {\n        this.cluster_search(JSON.stringify(el.value));\n      }\n    });\n  }\n\n  public cluster_search(query: any) {\n    console.log('cluster search call query' + query);\n    this.fetch_cluster_data();\n    this.highchart_function(query);\n  }\n\n  public fetch_cluster_data(){\n\n    //service call cluster service and fetch json object \n   \n\n  }\n\n  public highchart_function(query: any) {\n    this.bubblechart = {\n      plotOptions: {\n        series: {\n          cursor: 'pointer',\n          events: {\n            click: (event: any) => {\n              this.clickchart(event, query);\n            },\n          },\n        },\n      },\n\n      series: [\n        {\n          name: 'Europe',\n          data: [{ name: 'Germany', value: 245 }],\n        },\n      ],\n      chart: {\n        type: 'packedbubble',\n      },\n      title: {\n        text: 'Query Search',\n      },\n    };\n  }\n\n  public clickchart(event: any, query: any) {\n    alert(' clicked\\n' + event);\n    location.href = 'https://en.wikipedia.org/wiki/' + query;\n    console.log('Chart Event' + event);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}