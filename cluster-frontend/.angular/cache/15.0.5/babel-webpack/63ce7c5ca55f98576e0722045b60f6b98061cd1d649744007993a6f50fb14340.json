{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport * as Highcharts from 'highcharts/highcharts';\nimport HighchartsMore from 'highcharts/highcharts-more';\nHighchartsMore(Highcharts);\nlet SearchPageComponent = class SearchPageComponent {\n  constructor(clusterService) {\n    this.clusterService = clusterService;\n    this.query = '';\n    this.Highcharts = Highcharts;\n  }\n  ngOnInit() {\n    this.page_render();\n  }\n  page_render() {\n    this.clusterService.reindex_data();\n    console.log('page render');\n    const el = document.getElementById('input_query');\n    el === null || el === void 0 ? void 0 : el.addEventListener('keypress', event => {\n      console.log('EL' + el.value);\n      if (event.code === 'Enter') {\n        this.cluster_search(JSON.stringify(el.value));\n      }\n    });\n  }\n  cluster_search(query) {\n    console.log('cluster search call query' + query);\n    this.fetch_cluster_data(query);\n  }\n  fetch_cluster_data(query) {\n    //service call cluster service and fetch json object\n    console.log('fetch cluster data call');\n    this.clusterService.cluster_data();\n    this.clusterService.myBehaviorSubject.subscribe(data => {\n      console.log('JSON DATA', data);\n      if (data) {\n        this.clean_cluster_data(data);\n        this.clusterData = data;\n        this.highchart_function(query);\n      }\n    });\n  }\n  clean_cluster_data(cluster_response) {\n    console.log(cluster_response.length);\n  }\n  reindex_cluster_data() {\n    this.clusterService.reindex_data();\n  }\n  highchart_function(query) {\n    // this.bubblechart = {\n    this.bubblechart = Highcharts.chart('container', {\n      plotOptions: {\n        series: {\n          cursor: 'pointer',\n          events: {\n            click: event => {\n              // const hl = document.getElementById('hgchart') as HTMLAnchorElement;\n              // console.log(this.bubblechart.series)\n              // console.log(\"ffff\",event)\n              // this.clickchart(event, query);\n            }\n          }\n        },\n        packedbubble: {\n          minSize: '20%',\n          maxSize: '100%',\n          layoutAlgorithm: {\n            gravitationalConstant: 0.05,\n            splitSeries: true,\n            seriesInteraction: false,\n            dragBetweenSeries: false,\n            parentNodeLimit: true\n          },\n          dataLabels: {\n            enabled: true,\n            format: '{point.name}',\n            filter: {\n              property: 'y',\n              operator: '>',\n              value: 1\n            },\n            style: {\n              color: 'black',\n              textOutline: 'none',\n              fontWeight: 'normal'\n            }\n          }\n        }\n      },\n      series: this.clusterData,\n      chart: {\n        type: 'packedbubble'\n      },\n      title: {\n        text: 'Query Search'\n      }\n    });\n    // };\n  }\n\n  clickchart(event, query) {\n    alert(' clicked\\n' + event);\n    window.open('https://en.wikipedia.org/wiki/' + query);\n    console.log('Chart Event' + event);\n  }\n};\nSearchPageComponent = __decorate([Component({\n  selector: 'app-search-page',\n  templateUrl: './search-page.component.html',\n  styleUrls: ['./search-page.component.scss']\n})], SearchPageComponent);\nexport { SearchPageComponent };\n// plotOptions: {\n//   series: {\n//     cursor: 'pointer',\n//     events: {\n//       click: (event: any) => {\n//         alert()\n//         // const hl = document.getElementById('hgchart') as HTMLAnchorElement;\n//         console.log(\"ffff\",event.target)\n//         console.log(this.bubblechart.series.name)\n//         this.clickchart(event, query);\n//       },\n//     },\n//   },\n// },","map":{"version":3,"mappings":"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","names":["Component","Highcharts","HighchartsMore","SearchPageComponent","constructor","clusterService","ngOnInit","page_render","reindex_data","console","log","el","document","getElementById","addEventListener","event","value","code","cluster_search","JSON","stringify","query","fetch_cluster_data","cluster_data","myBehaviorSubject","subscribe","data","clean_cluster_data","clusterData","highchart_function","cluster_response","length","reindex_cluster_data","bubblechart","chart","plotOptions","series","cursor","events","click","packedbubble","minSize","maxSize","layoutAlgorithm","gravitationalConstant","splitSeries","seriesInteraction","dragBetweenSeries","parentNodeLimit","dataLabels","enabled","format","filter","property","operator","style","color","textOutline","fontWeight","type","title","text","clickchart","alert","window","open","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\IR_Cluster_Frontend\\IR_Cluster_Frontend\\cluster-frontend\\src\\app\\component\\search-page\\search-page.component.ts"],"sourcesContent":["import { stringToFileBuffer } from '@angular-devkit/core/src/virtual-fs/host';\nimport { Component, OnInit } from '@angular/core';\nimport * as Highcharts from 'highcharts/highcharts';\nimport HighchartsMore from 'highcharts/highcharts-more';\nimport { ClusterService } from 'src/app/service/cluster.service';\n\nHighchartsMore(Highcharts);\n@Component({\n  selector: 'app-search-page',\n  templateUrl: './search-page.component.html',\n  styleUrls: ['./search-page.component.scss'],\n})\nexport class SearchPageComponent implements OnInit {\n  query: string = '';\n  bubblechart: any;\n  constructor(private clusterService: ClusterService) {}\n  Highcharts = Highcharts;\n  clusterData:any;\n\n  ngOnInit(): void {\n    this.page_render();\n  }\n\n  public page_render() {\n    this.clusterService.reindex_data()\n    console.log('page render');\n    const el = document.getElementById('input_query') as HTMLInputElement;\n\n    el?.addEventListener('keypress', (event) => {\n      console.log('EL' + el.value);\n      if (event.code === 'Enter') {\n\n        this.cluster_search(JSON.stringify(el.value));\n      }\n    });\n  }\n\n  public cluster_search(query: any) {\n    console.log('cluster search call query' + query);\n    this.fetch_cluster_data(query);\n    \n  }\n\n  public fetch_cluster_data(query:any) {\n    //service call cluster service and fetch json object\n    console.log('fetch cluster data call');\n    this.clusterService.cluster_data();\n    this.clusterService.myBehaviorSubject.subscribe(\n      (data) => {\n        console.log('JSON DATA',data);\n        if(data){\n          this.clean_cluster_data(data)\n          this.clusterData = data;\n          this.highchart_function(query);\n        }\n      }\n    );\n    \n  }\n\n  public clean_cluster_data(cluster_response:any){\n    console.log(cluster_response.length)\n  }\n  \n  public reindex_cluster_data(){\n    this.clusterService.reindex_data();\n  }\n\n  \n  public highchart_function(query: any) {\n    // this.bubblechart = {\n\n      this.bubblechart=Highcharts.chart('container',{\n        plotOptions: {\n          series: {\n                cursor: 'pointer',\n                events: {\n                  \n                  click: (event: any) => {\n                    \n                    // const hl = document.getElementById('hgchart') as HTMLAnchorElement;\n                    // console.log(this.bubblechart.series)\n                    // console.log(\"ffff\",event)\n                    // this.clickchart(event, query);\n\n                  },\n                },\n              },\n          packedbubble: {\n            minSize: '20%',\n            maxSize: '100%',\n            layoutAlgorithm: {\n              gravitationalConstant: 0.05,\n              splitSeries: true,\n              seriesInteraction: false,\n              dragBetweenSeries: false,\n              parentNodeLimit: true\n            },\n            dataLabels: {\n              enabled: true,\n              format: '{point.name}',\n              filter: {\n                property: 'y',\n                operator: '>',\n                value: 1\n              },\n              style: {\n                color: 'black',\n                textOutline: 'none',\n                fontWeight: 'normal'\n              }\n            }\n          }\n        },\n\n\n      series: \n      this.clusterData,\n      chart: {\n        type: 'packedbubble',\n      },\n      title: {\n        text: 'Query Search',\n      },\n\n    }\n    )\n      \n    // };\n  }\n\n  public clickchart(event: any, query: any) {\n    alert(' clicked\\n' + event);\n    window.open('https://en.wikipedia.org/wiki/' + query);\n    console.log('Chart Event' + event);\n  }\n}\n\n\n// plotOptions: {\n//   series: {\n//     cursor: 'pointer',\n//     events: {\n      \n//       click: (event: any) => {\n//         alert()\n//         // const hl = document.getElementById('hgchart') as HTMLAnchorElement;\n//         console.log(\"ffff\",event.target)\n//         console.log(this.bubblechart.series.name)\n//         this.clickchart(event, query);\n//       },\n//     },\n//   },\n// },"]},"metadata":{},"sourceType":"module","externalDependencies":[]}