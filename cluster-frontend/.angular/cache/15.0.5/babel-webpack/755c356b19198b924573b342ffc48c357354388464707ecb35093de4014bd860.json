{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ClusterService {\n  constructor(http) {\n    this.http = http;\n    this.url = \"../../assets/cluster_data.json\";\n    this.reindex_url = \"../../assets/reindex.json\";\n    this.myBehaviorSubject = new BehaviorSubject(\"\");\n    this.myreindexBehaviourSubject = new BehaviorSubject(\"\");\n  }\n  cluster_data(query) {\n    let queryParams = new HttpParams();\n    queryParams = queryParams.append(\"x\", 5);\n    queryqueryParams.append(\"q\", query);\n    this.http.get(this.url, {\n      params: queryParams\n    }).subscribe(query_data => {\n      this.data = query_data;\n      this.myBehaviorSubject.next(this.data);\n    });\n  }\n  reindex_data() {\n    this.http.get(this.reindex_url).subscribe(data => {\n      this.reindexdata = data;\n      // console.log(this.reindexdata.success)\n      this.myreindexBehaviourSubject.next(this.reindexdata);\n    });\n  }\n}\nClusterService.ɵfac = function ClusterService_Factory(t) {\n  return new (t || ClusterService)(i0.ɵɵinject(i1.HttpClient));\n};\nClusterService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ClusterService,\n  factory: ClusterService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAqBA,UAAU,QAAQ,sBAAsB;AAC7D,SAASC,eAAe,QAAQ,MAAM;;;AAKtC,OAAM,MAAOC,cAAc;EAQzBC,YAAoBC,IAAe;IAAf,SAAI,GAAJA,IAAI;IANxB,QAAG,GAAC,gCAAgC;IACpC,gBAAW,GAAC,2BAA2B;IACvC,sBAAiB,GAAG,IAAIH,eAAe,CAAC,EAAE,CAAC;IAC3C,8BAAyB,GAAG,IAAIA,eAAe,CAAC,EAAE,CAAC;EAGZ;EAEhCI,YAAY,CAACC,KAAS;IAC3B,IAAIC,WAAW,GAAG,IAAIP,UAAU,EAAE;IAClCO,WAAW,GAAGA,WAAW,CAACC,MAAM,CAAC,GAAG,EAAC,CAAC,CAAC;IACvCC,gBAAgB,CAACD,MAAM,CAAC,GAAG,EAACF,KAAK,CAAC;IAElC,IAAI,CAACF,IAAI,CAACM,GAAG,CAAC,IAAI,CAACC,GAAG,EAAC;MAACC,MAAM,EAACL;IAAW,CAAC,CAAC,CAACM,SAAS,CAAEC,UAAU,IAAG;MACrE,IAAI,CAACC,IAAI,GAAED,UAAU;MACrB,IAAI,CAACE,iBAAiB,CAACC,IAAI,CAAC,IAAI,CAACF,IAAI,CAAC;IACtC,CAAC,CAAC;EACJ;EAEOG,YAAY;IACjB,IAAI,CAACd,IAAI,CAACM,GAAG,CAAC,IAAI,CAACS,WAAW,CAAC,CAACN,SAAS,CAAEE,IAAI,IAAG;MAChD,IAAI,CAACK,WAAW,GAAGL,IAAI;MACvB;MACA,IAAI,CAACM,yBAAyB,CAACJ,IAAI,CAAC,IAAI,CAACG,WAAW,CAAC;IACvD,CAAC,CAAC;EACJ;;;mBA3BWlB,cAAc;AAAA;;SAAdA,cAAc;EAAAoB,SAAdpB,cAAc;EAAAqB,YAFb;AAAM","names":["HttpParams","BehaviorSubject","ClusterService","constructor","http","cluster_data","query","queryParams","append","queryqueryParams","get","url","params","subscribe","query_data","data","myBehaviorSubject","next","reindex_data","reindex_url","reindexdata","myreindexBehaviourSubject","factory","providedIn"],"sourceRoot":"","sources":["C:\\IR_Cluster_Frontend\\IR_Cluster_Frontend\\cluster-frontend\\src\\app\\service\\cluster.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClusterService {\n\n  url=\"../../assets/cluster_data.json\";\n  reindex_url=\"../../assets/reindex.json\";\n  myBehaviorSubject = new BehaviorSubject(\"\");\n  myreindexBehaviourSubject = new BehaviorSubject(\"\")\n  data:any;\n  reindexdata:any;\n  constructor(private http:HttpClient) { }\n\n  public cluster_data(query:any){\n    let queryParams = new HttpParams();\n    queryParams = queryParams.append(\"x\",5);\n    queryqueryParams.append(\"q\",query);\n    \n    this.http.get(this.url,{params:queryParams}).subscribe((query_data)=>{\n    this.data= query_data;\n    this.myBehaviorSubject.next(this.data)\n    });\n  }\n\n  public reindex_data(){\n    this.http.get(this.reindex_url).subscribe((data)=>{\n      this.reindexdata = data;\n      // console.log(this.reindexdata.success)\n      this.myreindexBehaviourSubject.next(this.reindexdata)\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}